<?php

namespace Akkroo;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-04-22 at 11:41:34.
 */
class PHPMongoQueryTest extends \PHPUnit_Framework_TestCase {


	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {
		
	}
	
	/**
	 * @covers Akkroo\PHPMongoQuery::find
	 */
	public function testFind() {
		$query = array('a' => 'foo', 'b' => array('$ne' => 'bar'));
		$documents = array();
		$documents[0] = array(
			'id' => 1,
			'a' => 'foo',
			'b' => 'barr'
		);
		$documents[1] = array(
			'id' => 2,
			'a' => 'foo',
			'b' => 'bar'
		);
		$expectedResult = array($documents[0]);
		
		$this->assertEquals($expectedResult, PHPMongoQuery::find($query, $documents));
	}

	/**
	 * @covers Akkroo\PHPMongoQuery::executeQuery
	 */
	public function testExecuteQuery() {
		$queries = json_decode(file_get_contents(__DIR__.'/TestQueries/JSMongoQueryTestQueries.json'), true);
		
		foreach($queries as $q) {
			$this->assertEquals($q['result'], PHPMongoQuery::executeQuery($q['query'], $q['document'], $q['options']), $q['description']);
		}
	}

	/**
	 * @covers Akkroo\PHPMongoQuery::appendFieldSpecifier
	 */
	public function testAppendFieldSpecifier() {
		$input = ['testField' => ['$gt' => 6], '$or' => [['testField' => 5], ['testField' => ['$lt' => 5]]]];
		$val = 'value';
		$expectedOutput = ['testField.'.$val => ['$gt' => 6], '$or' => [['testField.'.$val => 5], ['testField.'.$val => ['$lt' => 5]]]];
		$op = PHPMongoQuery::appendFieldSpecifier($input, $val);
		$this->assertEquals($expectedOutput, $op);
	}
	
	/**
	 * @covers Akkroo\PHPMongoQuery::getDependentFields
	 */
	public function testGetDependentFields() {
		$input = ['test1' => 3, ['$or' => [['test2' => 5], ['test3' => 2]]]];
		$expectedOutput = ['test1', 'test2', 'test3'];
		$op = PHPMongoQuery::getDependentFields($input);
		$this->assertEquals($expectedOutput, $op, 'Dependent fields not found successfully');
	}

}
